name: Build and Publish Blog Comment

on:
  discussion_comment:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# See: https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: write
  id-token: write
  discussions: write
  pages: write

jobs:
  build:
    if: github.event.discussion.category.slug == 'blog-posts'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch Nix Derivation
        uses: cachix/cachix-action@v12
        with:
          name: nicholaschiasson-github-io
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Slug Discussion Title
        id: slug-discussion-title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "DISCUSSION_TITLE_SLUG=$(nix develop .#ciBlog -c deno run "--allow-env" bin/slug.js "${{ github.event.discussion.title }}")" >> "$GITHUB_OUTPUT"
      - name: Fetch Discussion
        id: fetch-discussion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "DISCUSSION=$(nix develop .#ciBlog -c deno run "--allow-env=GITHUB_GRAPHQL_URL,GITHUB_REPOSITORY_OWNER,GITHUB_TOKEN" "--allow-net=api.github.com" bin/fetchBlogPosts.js "${{ github.event.discussion.node_id }}")" >> "$GITHUB_OUTPUT"
      - name: Render Blog Post
        id: render-blog-post
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POST: ${{ steps.fetch-discussion.outputs.DISCUSSION }}
        run: nix develop .#ciBlog -c gomplate -c 'post=env:///POST?type=application/yaml' -f templates/blog-post.html -o dist/posts/${{ steps.slug-discussion-title.outputs.DISCUSSION_TITLE_SLUG }}.html
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          path: "dist"

  # deploy:
  #   if: github.event.discussion.category.slug == 'blog-posts'
  #   # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
  #   # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
  #   concurrency:
  #     group: "pages"
  #     cancel-in-progress: false
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3.5.2
  #     - name: Download Build Artifacts
  #       uses: actions/download-artifact@v3.0.2
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2
  #       with:
  #         path: "artifact"
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2

  deploy:
    if: github.event.discussion.category.slug == 'blog-posts'
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: https://nicholaschiasson.github.io/
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          path: pages
          ref: pages
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3.0.2
      - name: Prepare Pages
        run: |
          rm -rf pages/*
          mv artifact/* pages/
      - name: Deploy to GitHub Pages
        working-directory: pages
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Deploying to GitHub Pages"
          git push
